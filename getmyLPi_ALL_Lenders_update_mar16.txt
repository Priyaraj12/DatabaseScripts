CREATE DEFINER=`root`@`localhost` PROCEDURE `getmyLPi_ALL_Lenders`(in myuser int, in yesNo int,  in debug int)
BEGIN
		declare banker, id1, id2, status1, count1, temp, temp1, BTLender,rejecttemp,myloanid,MappedLender,userCrifScore,coappid int; 
		declare producttypeid int; -- added  by Priyaraj on Feb 1, 2023 for rejecting if producttypeid = 99 and 3 (for lender = vastu) when user selects it from frontend
        declare occupationtypeId int; -- added by Priyaraj on Feb 8, 2023 for rejecting if occupationtypeid = 1 and producttypeid = 6 or 7 (for lender = vastu) when user selects it from frontend
        declare ITfiled tinyint; -- added by Priyaraj on Mar 10, 2023 to get ITfiled value from user_employment
        declare lender_isITreqd int; -- added by Priyaraj on Mar 10, 2023 to get lender_isITreqd value from ref_lender_itconfig
        declare done  boolean;
        declare myLPi decimal (10,4);
        declare myuseremail,errmsg varchar(100);
        declare productOrLoanApplicable tinyint; -- added by Priyaraj on Mar 5,2023 to get productApplicability column
        
        -- Added additional condition of restricting to banker 11 (Vastu_ICICI) when the producttype 99/3 
        -- or (6 and occupationtypeid 1) or (7 and occupationtypeid 1) by Priyaraj on 07-03-2023
        -- ie along with banker = 10, banker = 11 condition also added
        
			
		-- We choose to calculate LPi for the banks that support specific product and specific loantype    
		-- Cursor to be used when no valid creditscore is available
		-- DECLARE curs1 CURSOR FOR SELECT l.lenderid FROM lender l
        -- Added the column applicability in cursor1 to check its value in the loop by Priyaraj on 15-03-2023
        DECLARE curs1 CURSOR FOR SELECT l.lenderid,lp.applicability FROM lender l
		inner join lender_product_loan lp on l.lenderid =lp.lenderid 
		inner join asset_financing a on lp.producttypeid = a.producttypeid and lp.loantypeid = a.loanTypeId
		where l.activeStatus >0 and lp.activestatus>0 and a.activeStatus>0 and a.userid=myuser;
		-- DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
	
		-- We choose to calculate LPi for the banks that support specific product and specific loantype    
		-- Cursor to be used when valid creditscore is available
		DECLARE curs2 CURSOR FOR SELECT l.lenderid,lp.applicability FROM lender l
		inner join lender_product_loan lp on l.lenderid =lp.lenderid 
		inner join asset_financing a on lp.producttypeid = a.producttypeid and lp.loantypeid = a.loanTypeId
		where l.activeStatus >0 and lp.activestatus>0 and a.activeStatus>0 and a.userid=myuser and userCrifScore between l.creditStartRange and l.creditEndRange ;
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
			
		set id2=0;
		set BTLender=0;
		set rejecttemp=0;
		set MappedLender=100;
		set coappid=-1;
					
		select primaryUserId, userLPiStatus, LPiCount, userEmail, subscriptionId into id1,  status1, count1, myuseremail, id2 
		from user_login where userId=myuser and activeStatus > 0;
		-- Modified the select query by Priyaraj on Feb 1, 2023 to get productTypeId as well
		
		select f.loanTypeId, f.currentLender,f.productTypeId into myloanid, BTLender,producttypeid from asset_financing f where f.userid=myuser and activeStatus>0;
        -- Added the select query by Priyaraj on Feb 8, 2023 to get occupationtypeId from user_employment 
        -- Added additionally to get ITfiled value by Priyaraj on Mar 10,2023  from user_employment
		select ue.occupationtypeId,ue.ITfiled into occupationtypeId,ITfiled from user_employment ue where ue.userId = myuser and activeStatus > 0;       
        if (debug) then select 'occupationtypeId,ITfiled', occupationtypeId,ITfiled ; end if;  
		if myloanid = 2 then 			
			select l.lpilenderid into MappedLender from ref_lender_mapping l where l.loanlenderid=BTLender;
			if (debug) then select 'Lender Mapping', BTLender, MappedLender, done ; end if;   
			-- insert into getmyLpi_All_Lenders_consolelogs select concat('Lender Mapping :','BTLender = ',BTLender,'..MappedLender = ',MappedLender,'.. done = ',done);
		end if;
		
		set temp=0;
		select count(*) into temp from user_lpi_lenders where activeStatus>0 and userid=myuser;

		set temp1=0;
		select count(*) into temp1 from user_lender_reject where activeStatus>0 and userid=myuser;

	   
		if ifnull(id2,0) = 0 then 
			select max(subscriptionDetailId) into id2 from subscription_details s 
			where s.AssignedUsereMail = myuseremail  and activeStatus > 0;
		end if;
	
		if ifnull(id2,0) = 0 then set yesNo = 0; end if;
		
		if (debug) then select 'before curssor', id1, id2,  status1, count1 , temp, myuseremail, done ; end if;
        -- Adding the debug statement outputs in getmyLpi_All_Lenders_consolelogs under column1
        -- insert into getmyLpi_All_Lenders_consolelogs select concat('before cursor : ','id1 = ',id1,'.. id2 = ',id2, '..status1 = ',status1,'.. count1 = ',count1,'..temp = ',temp,'..myuseremail = ',myuseremail);
        --

		if ifnull(id2,0) > 0 then 
			if ifnull(temp,0) = 0 then set yesNo=1; end if;  -- if there are no LPi records then force LPi calculation by setting yesno=1			
		end if;

		if (id1 = 0) and (status1 < 2)  and (count1 < 5) and (yesNo > 0) and (ifnull(id2,0) > 0) then
			begin
				if (debug) then select 'in begin before updating active status'; end if;
					-- New code to set activeStatus to 0 for existing user lpi lenders
				if ifnull(temp,0) > 0 then 
					begin
						update user_lpi_lenders set activeStatus = 0 where userid=myuser and activeStatus>0; 
						if (debug) then select 'setting user_lpi_lenders activeStatus to 0'; end if;
                        -- insert into getmyLpi_All_Lenders_consolelogs select concat('setting user_lpi_lenders activeStatus to 0','..userid = ',myuser);
						UPDATE user_lpi_lender_category_scores u SET u.activeStatus=0 where u.primaryUserId=myuser and activeStatus>0 and user_lpi_lender_category_score_id>0;
						
					end;
				end if;  
				if ifnull(temp1,0) > 0 then 
					update user_lender_reject set activeStatus = 0 where userid=myuser and activeStatus>0; 
				-- 	delete from user_lender_reject where activeStatus>0 and userid=myuser;
					if (debug) then select 'setting user_lender_reject activeStatus to 0'; end if;
				end if;  
					
				
				-- end of new code
				
				set done = FALSE;
				call getUserCBScore(myuser,0,userCrifScore);
				-- Checking for userCreditscore and if it is not done then skipping creditrange check else doing it
				if (userCrifScore<300) then
					begin
						OPEN curs1;
						if (debug) then select 'opening cursor1', done ; end if;
							read_loop: LOOP
								FETCH curs1 INTO banker,productOrLoanApplicable;
                                 -- Added the select query by Priyaraj on Mar 10, 2023 to get lender_isITreqd from ref_lender_itconfig
								select it.lender_isITreqd into lender_isITreqd from ref_lender_itconfig it where lenderid = banker and activestatus > 0;
                                if (debug) then select 'ITfiled,lender_isITreqd,banker', ITfiled,lender_isITreqd,banker; end if;
                                if (ITfiled = 0 and lender_isITreqd = 1) then
									set errmsg = banker + ' requires documented income in the form of ITR/payslips';
									if (debug) then select 'errmsg', errmsg; end if;
                                end if;								
									
									IF done THEN LEAVE read_loop; END IF;
                                    if (productOrLoanApplicable = 0) then
										if (debug) then select 'productApplicable for ', banker, producttypeid,myloanid; end if;
										-- insert into getmyLpi_All_Lenders_consolelogs select concat('banker = 10 and producttypeid = ', producttypeid);
										if (banker = 10 and producttypeid = 99) then
											set errmsg = 'Vastu does not provide offers for property not identified cases properties';                                            
										end if;    
                                        if (banker = 11 and producttypeid = 99) then                                        
											set errmsg = 'Vastu_ICICI does not provide offers for property not identified cases properties';                                            
										end if;                                         
										if (banker = 10 and producttypeid = 3) then
                                        if (debug) then select 'inside If (banker = 10) and (producttypeid = 3)', banker, producttypeid,myloanid; end if;
											set errmsg = 'Vastu does not provide offers for purchase of residential plots properties';
										end if;
                                        if (banker = 11 and producttypeid = 3) then
                                          if (debug) then select 'inside If (banker = 11) and (producttypeid = 3)', banker, producttypeid,myloanid; end if;
											set errmsg = 'Vastu_ICICI does not provide offers for purchase of residential plots properties';
										end if;
                                        if (errmsg != ' ') then
											if (debug) then select 'inserting lender reject', banker,producttypeid,occupationtypeId; end if;
											-- insert into getmyLpi_All_Lenders_consolelogs select concat('inserting lender reject ', '.. occupationtypeId = ',occupationtypeId, '.. errmsg = ',errmsg);
											call insert_lender_reject(myuser,banker,errmsg,rejecttemp);
										end if;
									-- Remodified the if condition as productApplicability column determines whether can proceed for calculation or end up with rejection. Done by Priyaraj on 15-03-2023
									else 
										if (banker = 10 and producttypeid = 6  and occupationtypeId = 1) then
											set errmsg = 'Vastu does not provide offers for residential properties in LAP for Salaried people';
										end if;
										if (banker = 11 and producttypeid = 6  and occupationtypeId = 1) then
											set errmsg = 'Vastu_ICICI does not provide offers for residential properties in LAP for Salaried people';
										end if;	
										if (banker = 10 and producttypeid = 7  and occupationtypeId = 1) then
											set errmsg = 'Vastu does not provide offers for commerical properties in LAP for Salaried people';
										end if;
										if (banker = 11 and producttypeid = 7  and occupationtypeId = 1) then
											set errmsg = 'Vastu_ICICI does not provide offers for commerical properties in LAP for Salaried people';
										end if;
										if (banker = 0) then
											set errmsg = ' ';
										end if;
                                    -- moved the code here
										if (errmsg != ' ') then
											if (debug) then select 'inserting lender reject', banker,producttypeid,occupationtypeId,errmsg,rejecttemp; end if;
											-- insert into getmyLpi_All_Lenders_consolelogs select concat('inserting lender reject','..producttypeid = ',producttypeid,'..occupationtypeId = ',occupationtypeId);
											call insert_lender_reject(myuser,banker,errmsg,rejecttemp);
										else -- If rejection is not happened anywhere we are calling lpi calculation
											if (debug) then select 'banker', banker,producttypeid,occupationtypeId,errmsg; end if;
											call getmyLPi_new(myuser, banker,count1, 0, myLPi);
											if (debug) then select 'after calling..', banker,producttypeid,occupationtypeId,errmsg; end if;
										end if;
											
								
									end if;			
                                    
									if(myloanid=2) and (banker=MappedLender) then											
											if (debug) then select 'inside loan id = 2 and banker = mapped lender', MappedLender, banker, myLPi; end if;
											set errmsg = 'BT Lender match';
											if (debug) then select 'inserting lender reject', MappedLender, banker; end if;
											call insert_lender_reject(myuser,banker,errmsg,rejecttemp);											   
										end if;

							
							END LOOP;
						CLOSE curs1;
					end;
				
				else -- if >= 300
					begin
						OPEN curs2;
						if (debug) then select 'opening cursor2', done ; end if;
						read_loop: LOOP
							FETCH curs2 INTO banker,productOrLoanApplicable;
								select it.lender_isITreqd into lender_isITreqd from ref_lender_itconfig it where lenderid = banker;
                                if (debug) then select 'ITfiled,lender_isITreqd,banker', ITfiled,lender_isITreqd,banker; end if;
                                 if (ITfiled = 0 and lender_isITreqd = 1) then
									if (banker = 10) then
										set errmsg = 'Vastu requires documented income in the form of ITR/payslips';
									end if;
                                    if (banker = 11) then
										set errmsg = 'Vastu_ICICI requires documented income in the form of ITR/payslips';
									end if;
									if (debug) then select 'errmsg', errmsg; end if;
                                 end if;
								IF done THEN LEAVE read_loop; END IF;
                                if (productOrLoanApplicable = 0) then
									if (debug) then select 'product not Applicable for  ', banker, producttypeid,occupationtypeId,myloanid; end if;
									if (banker = 10 and producttypeid = 99) then
										set errmsg = 'Vastu does not provide offers for property not identified cases properties';
									end if;    
                                    if (banker = 11 and producttypeid = 99) then
										set errmsg = 'Vastu_ICICI does not provide offers for property not identified cases properties';
									end if;
									if (banker = 10 and producttypeid = 3) then
										set errmsg = 'Vastu does not provide offers for purchase of residential plots properties';
									end if;
                                    if (banker = 11 and producttypeid = 3) then
										set errmsg = 'Vastu_ICICI does not provide offers for purchase of residential plots properties';
									end if;
									-- moved the condition from here in else part as frontend applicability column is having value 1 for producttypeid 6 and 7
                                    if (errmsg != ' ') then
										if (debug) then select 'inserting lender reject', banker,producttypeid,occupationtypeId,errmsg,rejecttemp; end if;
										call insert_lender_reject(myuser,banker,errmsg,rejecttemp);				
                                    end if;
								-- Added by Priya on Feb 1, for showing the rejection from Vastu(banker = 10) when producttypeid = 99/3									   
								else -- if productOrLoanApplicable = 1
									if (banker = 10 and producttypeid = 6  and occupationtypeId = 1) then
										set errmsg = 'Vastu does not provide offers for residential properties in LAP for Salaried people';
									end if;
                                    if (banker = 11 and producttypeid = 6  and occupationtypeId = 1) then
										set errmsg = 'Vastu_ICICI does not provide offers for residential properties in LAP for Salaried people';
									end if;
									if (banker = 10 and producttypeid = 7  and occupationtypeId = 1) then
										set errmsg = 'Vastu does not provide offers for commerical properties in LAP for Salaried people';
									end if;
                                    if (banker = 11 and producttypeid = 7  and occupationtypeId = 1) then
										set errmsg = 'Vastu_ICICI does not provide offers for commerical properties in LAP for Salaried people';
									end if;
									if (banker = 0) then
										set errmsg = ' ';
									end if;
                                    -- moved the code here
                                    if (errmsg != ' ') then
										if (debug) then select 'inserting lender reject', banker,producttypeid,occupationtypeId,errmsg,rejecttemp; end if;
										call insert_lender_reject(myuser,banker,errmsg,rejecttemp);
										if (debug) then select 'after reject statement..',banker,producttypeid,occupationtypeId,errmsg,rejecttemp; end if;
									else -- As we need to calculate LPI for occupationtypeId = 2 and 3, we need to calculate now. Priyaraj 21 - 02 -2023
										if (debug) then select 'banker', banker,producttypeid,occupationtypeId,errmsg; end if;
										call getmyLPi_new(myuser, banker,count1, 0, myLPi);
                                        if (debug) then select 'after calling..', banker,producttypeid,occupationtypeId,errmsg; end if;
                                    end if;					

								end if;	-- if productOrLoanApplicable
								if(myloanid=2) and (banker=MappedLender) then										
										if (debug) then select 'inside loan id = 2 and banker = mapped lender', MappedLender, banker, myLPi; end if;
										set errmsg = 'BT Lender match';
										if (debug) then select 'inserting lender reject', MappedLender, banker; end if;
										call insert_lender_reject(myuser,banker,errmsg,rejecttemp);										   
								end if;
						END LOOP;
						CLOSE curs2;
					end;
				end if; -- if userCrifScore 
				update user_login set LPiCount = LpiCount+1, updatedOn = now() where userId=myuser and activeStatus >0; 	
			end;
		end if;
		
		call get_All_Lender_Prospects (myuser); 
		if id1 > 0 then 
			call get_All_Lender_Prospects (id1); 
		end if;
                  

            
END